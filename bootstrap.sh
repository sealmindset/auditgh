#!/usr/bin/env bash
# bootstrap.sh - one-shot setup for the portal stack
# - Checks prerequisites
# - Creates .env if missing (does NOT overwrite existing)
# - Brings the portal stack up (-p portal)

set -Eeuo pipefail

PROJECT_NAME=${PROJECT_NAME:-portal}
COMPOSE_FILE=${COMPOSE_FILE:-docker-compose.portal.yml}
COMPOSE="docker compose -p ${PROJECT_NAME} -f ${COMPOSE_FILE}"

require() {
  command -v "$1" >/dev/null 2>&1 || {
    echo "Error: '$1' is required but not installed or not on PATH" >&2
    exit 1
  }
}

info()  { echo "[bootstrap] $*"; }
error() { echo "[bootstrap][error] $*" >&2; }

main() {
  info "Checking prerequisites..."
  require docker
  if ! docker compose version >/dev/null 2>&1; then
    error "Docker Compose v2 is required (use 'docker compose', not 'docker-compose'). Please upgrade Docker Desktop."
    exit 1
  fi

  if [[ ! -f .env ]]; then
    info "Creating .env (first-time setup)"
    local jwt
    if command -v openssl >/dev/null 2>&1; then
      jwt=$(openssl rand -hex 32)
    elif command -v python3 >/dev/null 2>&1; then
      jwt=$(python3 - <<'PY'
import secrets
print(secrets.token_hex(32))
PY
)
    else
      jwt="please-change-me-$(date +%s)"
      info "openssl/python3 not found; using placeholder JWT secret. Update POSTGREST_JWT_SECRET in .env manually."
    fi

    cat > .env <<EOF
# Generated by bootstrap.sh on $(date)
# Database
POSTGRES_USER=postgres
POSTGRES_PASSWORD=postgres
POSTGRES_DB=auditgh

# PostgREST
POSTGREST_JWT_SECRET=${jwt}

# App settings
DATABASE_URL=postgresql://postgres:postgres@db:5432/auditgh
SCANNER_IMAGE=auditgh-scanner:latest

# GitHub (required for server/seeder to query API)
GITHUB_ORG=
GITHUB_TOKEN=

# GitHub rate-limit tuning (adaptive throttle)
# Target ~50% of the available budget and use a minimum interval of 0.5s/request.
GITHUB_TARGET_UTILIZATION=0.5
GITHUB_MIN_INTERVAL=0.5

# Optional Redis (only if you run the redis profile)
REDIS_URL=redis://redis:6379/0
EOF
    info ".env created. Review and update GITHUB_ORG/GITHUB_TOKEN as needed."
  else
    info ".env already exists; leaving it unchanged."
  fi

  info "Ensuring local report/log folders exist"
  mkdir -p \
    oss_reports \
    terraform_reports \
    codeql_reports \
    secrets_reports \
    ci_reports \
    hardcoded_ips_reports \
    contributors_reports \
    linecount_reports \
    markdown \
    logs \
    runs

  info "Bringing up portal stack: ${COMPOSE} up -d --remove-orphans"
  ${COMPOSE} up -d --remove-orphans

  if command -v curl >/dev/null 2>&1; then
    info "Waiting for PostgREST on http://localhost:3001 (60s timeout)"
    for i in {1..60}; do
      if curl -fsS http://localhost:3001 >/dev/null; then
        info "PostgREST is up."
        break
      fi
      sleep 1
      if [[ $i -eq 60 ]]; then
        error "PostgREST did not become ready within 60s. Check logs: ${COMPOSE} logs -f postgrest"
      fi
    done
  else
    info "curl not found; skipping readiness check."
  fi

  info "Portal web:    http://localhost:5173"
  info "PostgREST API: http://localhost:3001"
  info "Server logs:   ${COMPOSE} logs -f server"
}

main "$@"
