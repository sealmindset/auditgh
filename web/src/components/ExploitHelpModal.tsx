import React, { useEffect, useState } from 'react'
import { xhrGetJson } from '../lib/xhr'

export type ExploitHelpModalProps = {
  open: boolean
  onClose: () => void
}

export default function ExploitHelpModal({ open, onClose }: ExploitHelpModalProps) {
  const [rows, setRows] = useState<any[]>([])
  const [q, setQ] = useState('')

  useEffect(() => {
    if (!open) return
    let canceled = false
    async function load() {
      try {
        const data = await xhrGetJson('/exploithelp.json')
        if (!canceled) setRows(Array.isArray(data) ? data : [])
      } catch {
        if (!canceled) setRows([])
      }
    }
    load()
    function onKey(e: KeyboardEvent) { if (e.key === 'Escape') onClose() }
    window.addEventListener('keydown', onKey)
    return () => { canceled = true; window.removeEventListener('keydown', onKey) }
  }, [open, onClose])

  if (!open) return null

  const filtered = rows.filter((r) => {
    const s = q.toLowerCase()
    if (!s) return true
    return [r.abbrev, r.full_name, r.one_liner, r.root_cause, r.scope, r.notes]
      .map((x: any) => String(x || '').toLowerCase())
      .some((t: string) => t.includes(s))
  })

  return (
    <div className="fixed inset-0 z-50">
      <div className="absolute inset-0 bg-black/40" onClick={onClose} />
      <div className="absolute inset-0 flex items-start justify-center p-4 overflow-auto">
        <div className="bg-white w-full max-w-5xl rounded shadow-xl border">
          <div className="flex items-center justify-between p-3 border-b">
            <div className="font-medium">Exploit Types Help</div>
            <button className="px-2 py-1 border rounded" onClick={onClose}>Close</button>
          </div>
          <div className="p-3">
            <div className="mb-2">
              <input className="border rounded px-2 py-1 w-full" placeholder="Search abbrev, full name, one-liner..." value={q} onChange={e=>setQ(e.target.value)} />
            </div>
            <div className="overflow-auto">
              <table className="min-w-full text-sm">
                <thead>
                  <tr className="bg-slate-50 text-left">
                    <th className="px-2 py-1 border">Abbrev</th>
                    <th className="px-2 py-1 border">Full name</th>
                    <th className="px-2 py-1 border">What it means (1-liner)</th>
                    <th className="px-2 py-1 border">Typical root cause</th>
                    <th className="px-2 py-1 border">Scope</th>
                    <th className="px-2 py-1 border">Notes</th>
                  </tr>
                </thead>
                <tbody>
                  {filtered.map((r, i) => (
                    <tr key={i} className={i % 2 === 0 ? '' : 'bg-slate-50'}>
                      <td className="px-2 py-1 border font-mono">{r.abbrev}</td>
                      <td className="px-2 py-1 border">{r.full_name}</td>
                      <td className="px-2 py-1 border">{r.one_liner}</td>
                      <td className="px-2 py-1 border">{r.root_cause}</td>
                      <td className="px-2 py-1 border">{r.scope}</td>
                      <td className="px-2 py-1 border">{r.notes}</td>
                    </tr>
                  ))}
                  {filtered.length === 0 && (
                    <tr>
                      <td className="px-2 py-4 border text-center text-slate-500" colSpan={6}>No results</td>
                    </tr>
                  )}
                </tbody>
              </table>
            </div>
          </div>
        </div>
      </div>
    </div>
  )
}
