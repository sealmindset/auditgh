[
  {
    "abbrev": "RCE",
    "full_name": "Remote Code Execution",
    "one_liner": "Attacker runs arbitrary code on a target system over the network.",
    "root_cause": "Unsafe deserialization, template injection, unsafe eval, memory corruption.",
    "scope": "Remote",
    "notes": "Often reached via command or template injection when remotely triggerable."
  },
  {
    "abbrev": "RCI",
    "full_name": "Remote Command Injection",
    "one_liner": "Attacker injects and executes OS commands on the server.",
    "root_cause": "User-controlled input passed to shell/system APIs without proper quoting/escaping.",
    "scope": "Remote",
    "notes": "Frequently a stepping stone to full RCE."
  },
  {
    "abbrev": "ACE",
    "full_name": "Arbitrary Code Execution",
    "one_liner": "Attacker runs arbitrary code due to unsafe evaluation or memory bugs.",
    "root_cause": "JIT/compiler bugs, memory corruption, plugin loading, eval of untrusted input.",
    "scope": "Local/Remote",
    "notes": "Generic term; remote ACE is typically called RCE."
  },
  {
    "abbrev": "DoS",
    "full_name": "Denial of Service",
    "one_liner": "Attacker causes service unavailability or severe degradation.",
    "root_cause": "Algorithmic complexity, resource exhaustion, crash/panic triggers, lock contention.",
    "scope": "Remote/Local",
    "notes": "May target app, database, or infrastructure layers."
  },
  {
    "abbrev": "Leak",
    "full_name": "Information Disclosure",
    "one_liner": "Sensitive data is exposed to unauthorized parties.",
    "root_cause": "Verbose errors, misconfigurations, directory listing, path traversal, debug endpoints.",
    "scope": "Remote",
    "notes": "Includes PII, credentials, internal metadata, or source code."
  },
  {
    "abbrev": "Secrets",
    "full_name": "Secret Exposure",
    "one_liner": "Credentials or tokens are exposed in code, logs, responses, or artifacts.",
    "root_cause": "Hardcoded secrets, leaked environment variables, permissive logs, artifact sprawl.",
    "scope": "Remote/Local",
    "notes": "Often leads to account takeover or lateral movement."
  },
  {
    "abbrev": "SQLi",
    "full_name": "SQL Injection",
    "one_liner": "Attacker injects SQL into queries to read/modify data or execute admin ops.",
    "root_cause": "String-concatenated queries without bind parameters or proper escaping.",
    "scope": "Remote",
    "notes": "Use prepared statements/ORM parameterization to mitigate."
  },
  {
    "abbrev": "XSS",
    "full_name": "Cross-Site Scripting",
    "one_liner": "Attacker injects client-side code that runs in victims' browsers.",
    "root_cause": "Untrusted input rendered without HTML/JS escaping or CSP enforcement.",
    "scope": "Browser",
    "notes": "Types: reflected, stored, DOM-based."
  },
  {
    "abbrev": "CSRF",
    "full_name": "Cross-Site Request Forgery",
    "one_liner": "Attacker tricks a user into performing actions with their session.",
    "root_cause": "Missing anti-CSRF tokens, missing SameSite cookies, relying solely on cookies.",
    "scope": "Browser→Server",
    "notes": "Use SameSite=Lax/Strict and per-action tokens."
  },
  {
    "abbrev": "SSRF",
    "full_name": "Server-Side Request Forgery",
    "one_liner": "Attacker causes the server to make arbitrary outbound requests.",
    "root_cause": "Fetching user-supplied URLs without allowlists or metadata/localhost blocks.",
    "scope": "Server→Internal/External",
    "notes": "Can reach metadata services, internal hosts, or cloud endpoints."
  },
  {
    "abbrev": "LFI",
    "full_name": "Local File Inclusion",
    "one_liner": "Attacker forces inclusion/reading of local files.",
    "root_cause": "User-controlled paths passed to include/read APIs without validation.",
    "scope": "Remote",
    "notes": "Often used to read credentials/config or escalate to code execution."
  },
  {
    "abbrev": "RFI",
    "full_name": "Remote File Inclusion",
    "one_liner": "Attacker includes remote code via user-controlled URL/file parameters.",
    "root_cause": "Dynamic include of URLs with remote sources enabled (e.g., PHP allow_url_fopen).",
    "scope": "Remote",
    "notes": "Usually yields direct RCE when remote code is executed."
  },
  {
    "abbrev": "Path",
    "full_name": "Path Traversal",
    "one_liner": "Attacker escapes intended directories to access arbitrary files.",
    "root_cause": "Improper normalization/validation of file paths (e.g., ../ sequences).",
    "scope": "Remote",
    "notes": "Check canonical paths and enforce allowlists."
  },
  {
    "abbrev": "Deserial",
    "full_name": "Insecure Deserialization",
    "one_liner": "Attacker crafts serialized objects to execute code or alter logic.",
    "root_cause": "Trusting untrusted serialization formats (Java/PHP/.NET/Python pickles).",
    "scope": "Remote/Local",
    "notes": "Prefer safe formats (JSON) and signed payloads; avoid unserializing untrusted data."
  },
  {
    "abbrev": "IDOR",
    "full_name": "Insecure Direct Object Reference",
    "one_liner": "Unauthorized access by guessing or manipulating object identifiers.",
    "root_cause": "Missing per-object authorization checks and predictable IDs.",
    "scope": "Remote",
    "notes": "Use server-side authz checks and opaque identifiers."
  },
  {
    "abbrev": "BOLA",
    "full_name": "Broken Object Level Authorization",
    "one_liner": "Improper authz on object-level APIs allows unauthorized access/modification.",
    "root_cause": "Lack of per-object permissions checks in REST/GraphQL endpoints.",
    "scope": "Remote",
    "notes": "OWASP API Top 10 category; similar to IDOR in API contexts."
  },
  {
    "abbrev": "AuthN/Z",
    "full_name": "Authentication / Authorization Weakness",
    "one_liner": "Broken auth or missing role/permission checks enable impersonation or access.",
    "root_cause": "Weak password/2FA flows, session fixation, missing RBAC/ABAC checks.",
    "scope": "Remote",
    "notes": "Covers login/session/permission issues; log sensitive actions."
  },
  {
    "abbrev": "Priv",
    "full_name": "Privilege Escalation",
    "one_liner": "Attacker gains higher privileges than intended.",
    "root_cause": "Insecure setuid/capabilities, misconfig, vuln chaining, ACL bypass.",
    "scope": "Local/Remote",
    "notes": "Often achieved post-initial foothold via lateral movement."
  },
  {
    "abbrev": "Escape",
    "full_name": "Sandbox / Container Escape",
    "one_liner": "Attacker breaks out of a sandbox, VM, or container boundary.",
    "root_cause": "Kernel/OS bugs, privileged mounts, device passthrough, namespace misconfig.",
    "scope": "Local/Remote",
    "notes": "Harden containers (seccomp/AppArmor), drop caps, keep hosts patched."
  },
  {
    "abbrev": "Redirect",
    "full_name": "Open Redirect",
    "one_liner": "Attacker redirects users to arbitrary external sites.",
    "root_cause": "Unvalidated redirect parameters without allowlists.",
    "scope": "Remote",
    "notes": "Useful for phishing or token theft chains."
  },
  {
    "abbrev": "CLKJK",
    "full_name": "Clickjacking",
    "one_liner": "Attacker overlays UI to trick users into unintended clicks.",
    "root_cause": "Missing X-Frame-Options or CSP frame-ancestors, framing allowed by default.",
    "scope": "Browser",
    "notes": "Deny framing or restrict to trusted origins."
  },
  {
    "abbrev": "Crypto",
    "full_name": "Cryptographic Weakness",
    "one_liner": "Using weak/obsolete ciphers, insecure IVs, or poor key handling.",
    "root_cause": "MD5/SHA1/RC4, ECB mode, predictable IVs, custom crypto, key leakage.",
    "scope": "Remote/Local",
    "notes": "Use modern libraries, TLS configs, and secure key management."
  },
  {
    "abbrev": "Logic",
    "full_name": "Business Logic Flaw",
    "one_liner": "Process or workflow can be abused to bypass rules or extract value.",
    "root_cause": "Missing invariants: lack of rate limits, step validation, monetary checks.",
    "scope": "Remote",
    "notes": "Often requires domain knowledge to detect and fix."
  },
  {
    "abbrev": "SSTI",
    "full_name": "Server-Side Template Injection",
    "one_liner": "Untrusted input evaluated by the server-side template engine.",
    "root_cause": "User-controlled data embedded in templates (e.g., Jinja2/Freemarker) without sandboxing.",
    "scope": "Remote",
    "notes": "Commonly escalates to RCE via template primitives."
  },
  {
    "abbrev": "XXE",
    "full_name": "XML External Entity Injection",
    "one_liner": "XML parser processes external entities referencing local or remote resources.",
    "root_cause": "Non-hardened XML parsers with external entities/DTDs enabled by default.",
    "scope": "Server→Internal/Local",
    "notes": "Leads to file read, SSRF, or exfiltration; disable external entities."
  }
]
