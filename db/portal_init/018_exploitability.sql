-- Exploitability statuses (global, cross-repo) with API view and RLS
-- UUID id for internal, api_id bigserial for external (PostgREST)

CREATE TABLE IF NOT EXISTS public.exploitability_statuses (
  id uuid PRIMARY KEY DEFAULT gen_random_uuid(),
  api_id bigserial UNIQUE NOT NULL,
  type text NOT NULL CHECK (type IN ('cve','ghsa','terraform_rule','codeql_rule','cwe','secret_detector')),
  key text NOT NULL,
  exploit_available boolean NOT NULL DEFAULT false,
  evidence jsonb NOT NULL DEFAULT '[]'::jsonb,
  last_auto_update_at timestamptz NULL,
  last_manual_update_at timestamptz NULL,
  last_updated_by text NULL,
  created_at timestamptz NOT NULL DEFAULT now(),
  updated_at timestamptz NOT NULL DEFAULT now(),
  CONSTRAINT exploitability_statuses_type_key_unique UNIQUE (type, key)
);

CREATE INDEX IF NOT EXISTS exploitability_statuses_type_key_idx ON public.exploitability_statuses(type, key);
CREATE INDEX IF NOT EXISTS exploitability_statuses_updated_at_idx ON public.exploitability_statuses(updated_at DESC);

-- trigger to keep updated_at fresh
CREATE OR REPLACE FUNCTION public.set_updated_at_exploitability_statuses()
RETURNS TRIGGER AS $$
BEGIN
  NEW.updated_at = now();
  RETURN NEW;
END;
$$ LANGUAGE plpgsql;

DROP TRIGGER IF EXISTS trg_set_updated_at_exploitability_statuses ON public.exploitability_statuses;
CREATE TRIGGER trg_set_updated_at_exploitability_statuses
  BEFORE UPDATE ON public.exploitability_statuses
  FOR EACH ROW EXECUTE FUNCTION public.set_updated_at_exploitability_statuses();

-- RLS
ALTER TABLE public.exploitability_statuses ENABLE ROW LEVEL SECURITY;
DROP POLICY IF EXISTS sel_exploitability_statuses_anon ON public.exploitability_statuses;
CREATE POLICY sel_exploitability_statuses_anon ON public.exploitability_statuses FOR SELECT TO postgrest_anon USING (true);
DROP POLICY IF EXISTS all_exploitability_statuses_app ON public.exploitability_statuses;
CREATE POLICY all_exploitability_statuses_app ON public.exploitability_statuses FOR ALL TO app USING (true) WITH CHECK (true);

-- API view
CREATE SCHEMA IF NOT EXISTS api;
GRANT USAGE ON SCHEMA api TO postgrest_anon;

CREATE OR REPLACE VIEW api.exploitability_statuses AS
  SELECT api_id AS id,
         id AS uuid,
         type,
         key,
         exploit_available,
         evidence,
         last_auto_update_at,
         last_manual_update_at,
         last_updated_by,
         created_at,
         updated_at
    FROM public.exploitability_statuses;

GRANT SELECT ON ALL TABLES IN SCHEMA api TO postgrest_anon;
